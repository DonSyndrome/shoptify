# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.15.3-stretch

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn test
      # make shure the mongodb is present! and store it at .env file so it culd transfer into the app engine container
      - run: echo MONGO_DB=$MONGO_DB > .env
      # add the Spotify client secret to the env file (watch the >> insted of >)
      - run: echo SPOTIFY_CLIENT_SECRET=$SPOTIFY_CLIENT_SECRET >> .env
      # add the Spotify client secret to the env file (watch the >> insted of >)
      - run: echo SITE_URL=$SITE_URL >> .env

      # build next server!
      - run:  yarn build 
      
      # install the gcloud sdk:
      # Add the Cloud SDK distribution URI as a package source
      - run: echo "deb http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list

      # Import the Google Cloud Platform public key
      - run: curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

      # Update the package list and install the Cloud SDK
      - run: sudo apt-get update && sudo apt-get install google-cloud-sdk
      # authenticate the gcloud sdk
      - run: |
              echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
              gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
              # gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      # deploy with the gcloud sdk
      - run: gcloud app deploy --stop-previous-version

